package lexicon;

import lexicon.data.dao.PersonDaoCollection;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;


@SpringBootApplication
public class ToDoApplication {
    public static void main(String[] args) {
        SpringApplication.run(ToDoApplication.class, args);
//        TodoItem testItem = new TodoItem("Change tires", "task description",LocalDate.of(2023, 9, 15), false, mikael);
//        TodoItemTask testObject = new TodoItemTask(true, testItem, mikael);

// Create a new Person object   no emails yet
//        Person newPerson = new Person("John", "Blund");
//        Person mikael = new Person("Mikael", "Engvall");
//        Person anders = new Person("Anders", "Loren");

// Call the create method to insert the newPerson into the database
//        personDao.create(mikael);
//        personDao.create(anders);
//        personDao.create(newPerson);

// The newPerson object now has the ID generated by the database  the data is not gotten from the db but from the dao
//        System.out.println("New Person ID: " + mikael.getId() + " First name: " + mikael.getFirstName() + " Last name: " + mikael.getLastName());
//        System.out.println("New Person ID: " + anders.getId() + " First name: " + anders.getFirstName() + " Last name: " + anders.getLastName());
//        System.out.println("New Person ID: " + newPerson.getId() + " First name: " + newPerson.getFirstName() + " Last name: " + newPerson.getLastName());

        PersonDaoCollection dao = PersonDaoCollection.getInstance();

        // Call findById method to find a person by their ID
//        dao.findById(6);
//        dao.findByName("John");
//        dao.delete(5);
//        Person updatedPerson = new Person(6, "John", "Blund");
//        dao.update(updatedPerson); //Updates the person with ID provided in updatedPerson, even if there is no change done
//        dao.findAll();
    }
}